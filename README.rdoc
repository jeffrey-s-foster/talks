= Talks.cs.umd.edu

== Local installation (for testing)

This web app requires Rails 3.1 and was developed under
ruby-1.9.2-p180. I recommend using {rvm}[http://beginrescueend.com/]
to install Ruby. Then do

  # skip the following steps if you're already using 1.9.2
  rvm install ruby-1.9.2
  rvm 1.9.2
  rvm default
  gem install rails

  cd talks/
  bundle install       # install all necessary packages
  rake db:schema:load  # create the database
  script/rails s       # start the server on localhost:3000

Then go to localhost:3000 and create an account for yourself. The
email sending probably won't work if you're on a local machine, so
look in log/development.log for the confirmation email that was sent
(search for "Confirm my account"), and enter the link. You'll probably
also want to make yourself an administrator, which you can do with

  sqlite3 db/development.sqlite3
  > update users set perm_site_admin = "1" where id = "1";

(You can probably set the confirmation info using sqlite3, also.)

== Deployment

* RAILS_ENV=production rake db:setup
* bundle exec rake assets:precompile
* config/environments/production.rb, update config.action_mailer.default_url_options
* config/initializers/devise.rb, update config.mailer_sender
* app/views/layouts/application.html.erb, change "talk.cs.umd.edu"
* bundle config build.sqlite3 -- --with-sqlite3-include=/usr/local/sqlite-3.7.6.3/include --with-sqlite3-lib=/usr/local/sqlite-3.7.6.3/lib
* bundle --deployment (install gems locally for phusion passenger)
  (For us, add /usr/local/ruby-1.9.3-p0/bin to path before doing that)
* Register
* sqlite3 db/development.sqlite3
  > update users set perm_site_admin = "1" where id = "1";

== Permission model

(See app/models/ability.rb for full details)

* Global roles
  * :perm_site_admin - permission to do anything on the site
    * Only admins can create a new list
  * :perm_create_talk - permission to create a talk
* Relationships
  * Each talk belongs_to one owner (user, can't be empty)
  * Each talk has_and_belongs_to_many lists (may be empty)
  * Each list has_and_belongs_to_many posters (users)
  * Each list has_and_belongs_to_many admins (users)
* Local roles
  * A talk may be created by anyone with :perm_create_talk permission
  * A talk may be added to a list by anyone with permission to post to that list
  * A talk may be edited/deleted by the creator of the talk or by an admin of any list the talk is posted to
  * A user may be granted or revoked list poster or admin permission by an admin of that list

== Miscellaneous

* {Color scheme}[http://colorschemedesigner.com/#0041YqqvKv5v5]
* {Button generator}[http://www.help4web.net/rss_button/index.php] - left-side background color 23ca23, right-side background color 888888, vertical bar position 12

== TODO list

* LDAP support for UMCP Directory IDs.  Using these is one less
  barrier to adoption, since people already have a directory ID.  Ping
  Neil for Rails code to do this, since he uses it for his graduate
  admissions website.

  Also see:

  * {UMD CAS FAQ}[http://login.umd.edu/developer.html]
  * {devise_cas_authenticatable}[https://github.com/nbudin/devise_cas_authenticatable]

* Support for tags.  The idea would be able to create a "smart" list
  based on tags indicated by the user.  For example, all talks that
  have tag Foo but not tag Bar.  This list is automatically updated
  whenever new talks are put in the system.

* More efficient queries in functions added to models/list.rb,
  models/user.rb, and models/talk.rb

* Add ssl for ical feed?

* rss/ical feeds - only include past n talks, e.g., past 1 year

* watch implementation
  * Send email (only) to new list subscribers if talk is cross-posted to a new list
  * Send email on cancellation
  * Indicate in email update whether you are subscribed to the talk or not

* Minor UI suggestion: In the "upcoming talks" it might be nice to
  break it into "talks this week" (interpreted either as next 7 days,
  or before 11:59p on the coming Friday -- probably the latter makes
  more sense and is more consistent with the email semantics) and
  "talks further out".

* disable (really) users from cancelling accounts? or enable it fully

* split lists window so list info is on left, talks on right

* what happens to posted talks when a user is deleted?

* icon for poster?

* what happens if talk cross-posted by another user, then orig user tries to edit the talk?
